
#user  nobody;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections 1024;
    multi_accept on; # 允许一个工作进程同时接受多个新连接
    accept_mutex on; # 防止惊群效应
    use epoll; # 在Linux上使用epoll事件模型，提高性能
}


http {
    client_max_body_size 100M; # 全局设置，影响所有server块，允许单个图片的大小

    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;

    keepalive_timeout  65s;
    keepalive_requests 1000;

    gzip on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)"; #对IE6以下的版本都不进行压缩
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
      text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
      text/javascript application/javascript application/x-javascript
      text/x-json application/json application/x-web-app-manifest+json
      text/css text/plain text/x-component
      font/opentype application/x-font-ttf application/vnd.ms-fontobject
      image/x-icon;

    server {
        listen       80;
        server_name  local_http;
        root   /usr/local/yxx/dist;

        # 为特定的URL匹配请求设置根目录
        location / {
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
        {
            expires      30d;
        }
        location ~ .*\.(js|css)?$
        {
            expires      12h;
        }

        location ^~/prod-api/  {
		        proxy_set_header Host $http_host;
		        proxy_set_header X-Real-IP $remote_addr;
		        proxy_set_header REMOTE-HOST $remote_addr;
		        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		        proxy_pass http://localhost:8080/;
        }
        location ^~/dev-api/ {
		        proxy_set_header Host $http_host;
		        proxy_set_header X-Real-IP $remote_addr;
		        proxy_set_header REMOTE-HOST $remote_addr;
		        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		        proxy_pass http://localhost:8080/;
        }
        location ^~/stage-api/ {
		        proxy_set_header Host $http_host;
		        proxy_set_header X-Real-IP $remote_addr;
		        proxy_set_header REMOTE-HOST $remote_addr;
		        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		        proxy_pass http://localhost:8080/;
        }
	}
	server {
		# 服务器端口使用443，开启ssl, 这里ssl就是上面安装的ssl模块
		# listen       443 ssl http2;
		listen       444;
		# 域名，多个以空格分开
		server_name  meraki-e.fun www.meraki-e.fun;

		# ssl证书地址
		# ssl_certificate     cert/meraki-e.fun.pem;  # pem文件的路径
		# ssl_certificate_key  cert/meraki-e.fun.key; # key文件的路径

		# ssl验证相关配置
		# ssl_session_timeout  5m;    #缓存有效期
		# ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;    #加密算法
		# ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    #安全链接可选的加密协议
		# ssl_prefer_server_ciphers on;   #使用服务器端的首选算法

		root   /usr/local/yxx/dist;

        # 为特定的URL匹配请求设置根目录
        location / {
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
        {
            expires      30d;
        }
        location ~ .*\.(js|css)?$
        {
            expires      12h;
        }

        location ^~/prod-api/  {
		        proxy_set_header Host $http_host;
		        proxy_set_header X-Real-IP $remote_addr;
		        proxy_set_header REMOTE-HOST $remote_addr;
		        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		        proxy_pass http://localhost:8080/;
        }
        location ^~/dev-api/ {
		        proxy_set_header Host $http_host;
		        proxy_set_header X-Real-IP $remote_addr;
		        proxy_set_header REMOTE-HOST $remote_addr;
		        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		        proxy_pass http://localhost:8080/;
        }
        location ^~/stage-api/ {
		        proxy_set_header Host $http_host;
		        proxy_set_header X-Real-IP $remote_addr;
		        proxy_set_header REMOTE-HOST $remote_addr;
		        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		        proxy_pass http://localhost:8080/;
        }
	}

    upstream springboot {
        server localhost:7319 weight=10;
    }

    server {
        listen 80;

        location / {
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_pass http://springboot/;
        }
    }

    include vhost/*.conf;
}
